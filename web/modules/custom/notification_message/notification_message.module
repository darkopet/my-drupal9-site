<?php

/**
 * @file
 * Holds hook implementation for the Message example module.
 */

use Drupal\node\Entity\Node;
use Drupal\message\Entity\Message;

/**
 * Implements hook_node_insert().
 */
function notification_message_node_insert(Node $node) {
  if ($node->getType() === 'event') {
    $message = Message::create(['template' => 'event_created_message', 'uid' => $node->get('uid')]);
    $message->set('field_node_reference_message', $node);
    $eventType = $node->get('field_event_type')->getValue()[0]['target_id'];
    $message->set('field_event_type_msg', $eventType);
    $text = $message->getText()[0];
    $html = \Drupal::token()->replace($text, [
      'node' => $node,
    ], []);
    $html = strip_tags(html_entity_decode($html));
    $message->set('field_message_show_ui', str_replace('&nbsp;', ' ', $html));
    $message->save();
//  dd($message);
  }
}

/**
 * Implements hook_theme().
 */
function notification_message_theme() {
  return [
    'notification_block' => [
      'variables' => [
        'content' => NULL
      ],
      'render element' => 'children',
    ],
  ];
}

function notification_message_views_query_alter(
  \Drupal\views\ViewExecutable $view,
  \Drupal\views\Plugin\views\query\QueryPluginBase $query){
  if($view->id() == 'notifications2'){
    $userId = \Drupal::currentUser()->id();
    if ($userId) {
      $user = \Drupal::entityTypeManager()->getStorage('user')->load($userId);
      $limit = $user->get('field_maximum_items')->getValue()[0]['value'];
      $view->getPager()->setItemsPerPage($limit);
    }
  }
}

