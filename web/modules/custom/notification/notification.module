<?php

/**
 * @file
 * Holds hook implementation for the Message example moudle.
 */

use Drupal\message\Entity\Message;
use Drupal\node\Entity\node;

/**
* Implements hook_node_insert().
*/
function notification_node_insert(Node $node) {
    // dd($node);
  if($node) {
    // dd($node);
    $contentType = $node->get('type')->getValue()[0]['target_id'];
    // dd($contentType);
        if($contentType == 'event') {
            $message = Message::create([
                'template' => 'notification_message_type',
                'uid' => $node->get('uid')->getValue(),
            ]);
            $message->set('field_notification', $node);
            // dd($message);
            $eventType = $node->get('field_event_type')->getValue()[0]['target_id'];
            // dd($eventType);
            $message->set('field_event_type_message', $eventType);
            // dd($message);
            $text = $message->getText()[0];
            // dd($text);
            $html = \Drupal::token()->replace($text, [
                'node' => $node,
            ], []);
            // dd($html);
            $html = strip_tags(html_entity_decode($html));
            // dd($html);
            $message->set('field_message_show', str_replace('&nbsp;',' ', $html));
            // dd($message->get('field_message_show')->getValue());
            $message->save();
            // dd($message);
        }
    }
}

/**
 * Implements hook_theme().
 */
function notification_theme() {
    return [
        'notification' => [
            'variables' => [
                'content' => NULL
            ],
        ],
    ];
}

function notification_views_query_alter(
    \Drupal\views\ViewExecutable $view,
    \Drupal\views\Plugin\views\query\QueryPluginBase $query){
    // dd($view);
    if($view->id() == 'notifications2'){
      $userId = \Drupal::currentUser()->id();
      if ($userId) {
        $user = \Drupal::entityTypeManager()->getStorage('user')->load($userId);
        dd($user);
        $limit = $user->get('field_maximum_notifications')->getValue()[0]['value'];
        $view->getPager()->setItemsPerPage($limit);
      }
    }
  }